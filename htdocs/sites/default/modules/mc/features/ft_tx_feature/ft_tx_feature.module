<?php

include_once('ft_tx_feature.features.inc');

/**
 * Implementation of hook_theme
 */
function ft_tx_feature_theme($existing, $type, $theme, $path){
	  return array(
	  	  'feature_badge' => array('variables' => array('element' => NULL,'badge' => null)),
    	);
}


/**
 * Implementation of theme_feature_badge
 */
 
function theme_feature_badge($element, $badge){
 
  //The type of $element depends if the function is called from Display suite or s view.
  if (is_object($element)){
    $node = $element;
  }else{
    $node = node_load($element);
  }
   
  //Get all the taxonomies associated to the node.
  $taxonomies_node = $node->taxonomy;
  
  //Get the vid for features_feature.
  $taxonomy_feature_vid = _mc_api_get_vid_from_name('features_feature');
  
  //Figure out if at least of the taxonomies belong to the features vocabulary.
  foreach($taxonomies_node as $taxonomy_term){
    
    //Get the vocabulary and verify if the taxonomy term belongs to feature vocabulary.
    if ($taxonomy_feature_vid == $taxonomy_term->vid){
      $term = $taxonomy_term;
      //Get the node asociatd to the term to take the picture.
      $node_associated_term = node_load(_taxonomynode_get_nid_from_tid($term->tid));
      if ($node_associated_term->field_taxonomy_badge[0]['filepath']){
        $image_url = file_create_url($node_associated_term->field_taxonomy_badge[0]['filepath']);
      }
      break;
    }
  }
  $term_class = strtolower(str_replace(array('][', '_', ' ', '?'), '-', $term->name));
  //Create the html output and return it.
  $output .= '<span class="badge-'. $badge . ' term-' . $term_class .'" style="background:url(' . $image_url . ')">';
  $output .= '</span>';
  
  return $output;
}


/**
 * Implementation of hook_init()
 */
function ft_tx_feature_init(){
  $path = drupal_get_path('module', 'ft_tx_feature');
  drupal_add_css($path .'/feature_badge.css', 'theme'); 
}


/**
 * Implementation of hook_ds_fields
 * Custom Display Suite field.
 */

function ft_tx_feature_ds_fields($type_name, $build_mode, $extra) {
  $fields = array(
      'corner_peel' => array(
      'title' => t('Corner Peel'),
      'exclude' => array(
        'group' => 'group',
        'link' => 'link',
        'webform' => 'webform',
        'article' => 0,
        'audio' => 0,
        'event' => 0,
        'feeds' => 0,
        'file' => 0,
        'nnews' => 0,
        'npage' => 0,
        'place' => 0,
        'video' => 0,
        'gallery' => 0,
        'gallery_image' => 0,
        'forum' => 0,
        'taxonomy_feature' => 0,
      ),
      'type' => DS_FIELD_TYPE_CODE,
      'status' => DS_FIELD_STATUS_CUSTOM,
      'properties' => array(
        'formatters' => array(
          'ds_eval_code' => 'Default',
        ),
        'code' => '<?php 
          print theme("feature_badge", $object, 1);
        ?>',
        'token' => 0,
      ),
    ),
  );
  
  return array('nd' => $fields);
}



