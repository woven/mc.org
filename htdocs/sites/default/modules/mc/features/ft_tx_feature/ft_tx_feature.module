<?php

/**
 * Implementation of hook_theme
 */
function ft_tx_feature_theme($existing, $type, $theme, $path){
	  return array(
	  	  'feature_badge' => array('variables' => array('element' => NULL,'badge' => null)),
    	);
}


/**
 * Implementation of theme_feature_badge
 */
 
function theme_feature_badge($element, $badge, $view = false){
  
  //The type of $element depends if the function is called from Display suite or s view.
  if ($view == false){
    $node = $element;
  }else{
    $node = node_load($element->node_node_data_field_featured_items_nid);
  }
   
  //Get all the taxonomies associated to the node.
  $taxonomies_node = $node->taxonomy;
  
  //Figure out if at least of the taxonomies belong to the features vocabulary.
  foreach($taxonomies_node as $taxonomy_term){
    //Get the vocabulary and verify if the taxonomy term belongs to feature vocabulary.
    $vocabulary = taxonomy_vocabulary_load($taxonomy_term->vid);
    
    if ($vocabulary->module == 'features_feature'){
      $term = $taxonomy_term;
      //Get the node asociatd to the term to take the picture.
      $node_associated_term = node_load(_taxonomynode_get_nid_from_tid($term->tid));
      if ($node_associated_term->field_taxonomy_image[0]['filepath']){
        $image_url = $GLOBALS['base_url'] . '/' . $node_associated_term->field_taxonomy_image[0]['filepath'];
      }
      break;
    }
  }
  
  $output .= '<span class="badge-'. $badge . ' ' . $term->name .'" style="background:url(' . $image_url . ')">';
  $output .= '</span>';
  
  return $output;
}


/**
 * Implementation of hook_init()
 */
function ft_tx_feature_init(){
  $path = drupal_get_path('module', 'ft_tx_feature');
  drupal_add_css($path .'/feature_badge.css', 'theme'); 
}
