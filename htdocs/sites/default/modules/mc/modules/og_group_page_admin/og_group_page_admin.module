<?php

/**
 * Implementation of hook_perm()
 */
function og_group_page_admin_perm(){
  return array('administer group main page');
}

/**
 * Implementation of hook_menu()
 */
function og_group_page_admin_menu(){
  $items = array();
  $items['node/%node/manage_group_blocks'] = array(
    'title' => 'Manage Blocks',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('og_group_page_admin_manage_group_blocks',1),
    'access callback' => '_og_group_page_admin_access',
    'access arguments' => array('administer group main page', 1),
    'type' => MENU_LOCAL_TASK,
    'file' => 'og_group_page_admin.pages.inc',
  );
  // AHAH callback
  $items['og_group_page_admin/js/%/%'] = array(
    'page callback' => '_og_group_page_admin_set_fetured',
    'page arguments' => array(1),
    'access callback' => '_og_group_page_admin_access',
    'access arguments' => array('administer group main page', 1),
    'type' => MENU_LOCAL_TASK,
    'file' => 'og_group_page_admin.pages.inc',
  );
  
  return $items;
}

/**
 * Implementation of hook_form_alter()
 */
function og_group_page_admin_form_alter(&$form, &$form_state, $form_id){
  
}

/****** CUSTOM ACCESS CALLBACK ******/
function _og_group_page_admin_access($perm, $node = NULL){
  global $user;
  if($node != NULL){
    if (og_is_group_type($node->type)) {
	  if($perm == 'administer group main page'){
	    if(og_is_group_admin($node)){
	      return TRUE;
        }
	  }else{
	    //By default it grants access whenever variable is not found
	    return variable_get($perm,1);
	  }
	}
  }
  return FALSE;
}
/**
 * helper function to simplify a bit things on the front_end
 * if param show_in_group_context is set to TRUE it should return true whenever group context
 */
function _og_group_check_access($access_id, $show_in_group_context = FALSE){
  
  if((arg(0) == 'node' && is_numeric(arg(1)))){
    if($show_in_group_context || is_null(arg(2))){
      $nid = arg(1);
      $node = node_load($nid);
      $perm = $access_id.'_'.$nid;
	  return _og_group_page_admin_access($perm, $node);
	}
  }elseif($show_in_group_context){
    //todo: check if pages is in group context
  }
  return FALSE;
}


/****** CUSTOM CALLBACKS ******/
/**
 * Displays a button to add or removed a post from featured list
 */
function og_group_page_admin_add_remove_featured_form($form_state, $node){
  
  $form['#node'] = $node;
  
  $form['make_featured'] = array(
    '#type' => '#submit',
	'#value' => $node->promoted?'Remove from Featured':'Mark as Featured'
  );
  
}

/**
 * submit handler for the above function
 */
function _og_group_page_admin_add_remove_featured_form_submit($form, &$form_state){
  print_r($form_state['values']['make_featured']);
}

/**
 * Implementation of hook_context_load_alter()
 */
function og_group_page_admin_context_load_alter(&$context) {
  if ($context->name == 'group_homepage' && is_numeric(arg(1))){
    $nid = arg(1);
    foreach($context->reactions['block']['blocks'] as $id => $block){
      if (variable_get('og_block|' . $id . '|' . $nid, 1) == 0){
        unset($context->reactions['block']['blocks'][$id]);
      }
    }
  }
}