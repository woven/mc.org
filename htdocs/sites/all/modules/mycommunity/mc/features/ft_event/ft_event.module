<?php

include_once('ft_event.features.inc');


function ft_event_preprocess($vars,$hook){
  if($hook == 'block'){
    $cblock = $vars['block'];
    if($cblock->module == 'ds' && $cblock->bid == 'ds-0b596e3199de270de74a2f6e8f0d1525'){
      $cblock->subject = t("Where it's at");
    }
    if($cblock->module == 'ds' && $cblock->bid == 'ds-5c755d31699c072160e29da9599e28f3'){
      $cblock->subject = t("Add to calendar");
    }
  }

}

function ft_event_theme() {
  $theme_functions = array(
    'myevents_flag_link' => array(
      'arguments' => array('field' => NULL),
    ),
    'mc_event_view_header' => array('variables' => array('view' => NULL)),
    'mc_event_header' => array('title' => null,'count' => null,'url' => null),
    'mc_event_date' => array('variables' => array('unix_date_start' => NULL, 'unix_date_end' => NULL, 'has_end_date' => NULL, 'has_time' => NULL, 'hide_day' => NULL))
  );
  return $theme_functions;
}

function theme_myevents_flag_link($field){
  $node = $field['object'];
  global $user;

  if($user->uid){
    return flag_create_link('events_bookmarks', $node->nid);
  }else{
    return '<span class="flag-events-bookmarks unknown" ><a href="#" class="flag-action">Save to my events</a></span>';
  }
}

function ft_event_ds_fields($type_name, $build_mode, $extra) {
  $fields = array(
    'mt_add_ical' => array(
      'title' => t('Add to Calendar'),
      'exclude' => array(
        'group' => 'group',
        'link' => 'link',
        'webform' => 'webform',
        'article' => 0,
        'audio' => 0,
        'event' => 0,
        'feeds' => 0,
        'file' => 0,
        'nnews' => 0,
        'npage' => 0,
        'place' => 0,
        'video' => 0,
        'gallery' => 0,
        'gallery_image' => 0,
        'forum' => 0,
        'taxonomy_feature' => 0,
      ),
      'type' => DS_FIELD_TYPE_CODE,
      'status' => DS_FIELD_STATUS_CUSTOM,
      'properties' => array(
        'css-class' => 'field-ical',
        'formatters' => array(
          'ds_eval_code' => 'Default',
        ),
        'code' => '<?php
          print mt_add_ical($object);
        ?>',
        'token' => 0,
      ),
    ),
    'mt_add_group_ical' => array(
      'title' => t('Add Group to Calendar iCal'),
      'exclude' => array(
        'group' => 'group',
        'link' => 'link',
        'webform' => 'webform',
        'article' => 0,
        'audio' => 0,
        'event' => 0,
        'feeds' => 0,
        'file' => 0,
        'nnews' => 0,
        'npage' => 0,
        'place' => 0,
        'video' => 0,
        'gallery' => 0,
        'gallery_image' => 0,
        'forum' => 0,
        'taxonomy_feature' => 0,
      ),
      'type' => DS_FIELD_TYPE_CODE,
      'status' => DS_FIELD_STATUS_CUSTOM,
      'properties' => array(
        'css-class' => 'field-group-ical',
        'formatters' => array(
          'ds_eval_code' => 'Default',
        ),
        'code' => '<?php
          print mt_add_group_ical($object);
        ?>',
        'token' => 0,
      ),
    ),
    'mt_add_myevents' => array(
      'title' => t('Add To My events'),
      'exclude' => array(
        'group' => 0,
        'link' => 0,
        'webform' => 0,
        'article' => 0,
        'audio' => 0,
        'event' => 0,
        'feeds' => 0,
        'file' => 0,
        'nnews' => 0,
        'npage' => 0,
        'place' => 0,
        'video' => 0,
        'gallery' => 0,
        'gallery_image' => 0,
        'forum' => 0,
        'taxonomy_feature' => 0,
      ),
      'type' => DS_FIELD_TYPE_THEME,
      'status' => DS_FIELD_STATUS_DEFAULT,
      'properties' => array(
        'css-class' => 'field-add-myevents',
        'formatters' => array(
          'myevents_flag_link' => t('Default'),
        ),
        'token' => 0,
      ),
    ),
    'mt_add_group_rss' => array(
      'title' => t('Add Group to Calendar RSS'),
      'exclude' => array(
        'group' => 'group',
        'link' => 'link',
        'webform' => 'webform',
        'article' => 0,
        'audio' => 0,
        'event' => 0,
        'feeds' => 0,
        'file' => 0,
        'nnews' => 0,
        'npage' => 0,
        'place' => 0,
        'video' => 0,
        'gallery' => 0,
        'gallery_image' => 0,
        'forum' => 0,
        'taxonomy_feature' => 0,
      ),
      'type' => DS_FIELD_TYPE_CODE,
      'status' => DS_FIELD_STATUS_CUSTOM,
      'properties' => array(
        'css-class' => 'field-group-ical',
        'formatters' => array(
          'ds_eval_code' => 'Default',
        ),
        'code' => '<?php
          print mt_add_group_rss($object);
        ?>',
        'token' => 0,
      ),
    ),
    'mt_add_gcal' => array(
      'title' => t('Add to Google Calendar'),
      'exclude' => array(
        'group' => 'group',
        'link' => 'link',
        'webform' => 'webform',
        'article' => 0,
        'audio' => 0,
        'event' => 0,
        'feeds' => 0,
        'file' => 0,
        'nnews' => 0,
        'npage' => 0,
        'place' => 0,
        'video' => 0,
        'gallery' => 0,
        'gallery_image' => 0,
        'forum' => 0,
        'taxonomy_feature' => 0,
      ),
      'type' => DS_FIELD_TYPE_CODE,
      'status' => DS_FIELD_STATUS_CUSTOM,
      'properties' => array(
        'css-class' => 'field-gcal',
        'formatters' => array(
          'ds_eval_code' => 'Default',
        ),
        'code' => '<?php
          print mt_add_gcal($object);
        ?>',
        'token' => 0,
      ),
    ),
  );
  return array('nd' => $fields);
}

function mt_add_group_rss($node){
  foreach ($node->og_groups as $key => $value) {
    $gid=$key;
    break;
  }
  return '<span class="rss-group-ico"> </span><a class="ical-link" href="http://'. $_SERVER["SERVER_NAME"] .'/groups/' . $gid . '/rss">All events from this group (RSS)</a>';
}

function mt_add_group_ical($node){
  foreach ($node->og_groups as $key => $value) {
    $gid=$key;
    break;
  }
  return '<span class="ical-group-ico"> </span><a class="ical-link" href="webcal://'. $_SERVER["SERVER_NAME"] .'/group/' . $gid . '/ical">All events from this group (iCal)</a>';
}

function mt_add_ical($node){
  return '<span class="ical-ico">Image</span><a class="ical-link" href="webcal://'. $_SERVER["SERVER_NAME"] .'/node/' . $node->nid . '/ical">Just this event (iCal)</a>';
}

function mt_add_gcal($node){
  $title = urlencode($node->title);
  $description = urlencode(strip_tags($node->content['body']['#value']));
  $location = _mc_api_format_location($node->location);
  $start_date = event_format_date($node->event['start_utc'], 'custom', "Ymd\THis\Z");
  $end_date = event_format_date($node->event['end_utc'], 'custom', "Ymd\THis\Z");
  return '<span class="gcal-ico">Image</span><a target="_blank" class="ical-link" href="http://www.google.com/calendar/render?action=TEMPLATE&text=' . $title . '&details=' . $description . '&dates=' . $start_date .'/' . $end_date . '&location='. $location  .'">Just this event (gCal)</a>';
}


/**
 * Implementation of hook_theme()
 *
 */

function ft_event_late_form_alter(&$form, &$form_state, $form_id){
  global $user;

  if(!is_ct_form($form,'event')){
    return;
  }

  if(isset($form['field_online_event'])){
    $form['field_place']['0']['#prefix'] = '<div class="default-location-wrapper">';
    $form['field_place']['0']['#suffix'] = "</div>";
    if(isset($form['#node'])){
      if($form['#node']->field_online_event[0]['value']){
        $form['field_place']['0']['#prefix'] = '<div class="default-location-wrapper hidden">';
      }
    }
    drupal_add_js((drupal_get_path('module', 'ft_event') .'/js/mc_online_location.js'));
    drupal_add_css((drupal_get_path('module', 'ft_event') .'/css/mc_online_location.css'));
  }

}

function ft_event_form_alter(&$form, &$form_state, $form_id){
	if($form_id == "event_node_form" && arg(0) == "node" && arg(1) == "add" ){

		$ctime = &$form['event']['start_exploded']['#default_value'];
		if($ctime['minute'] > 30){
			$ctime['hour']++;
		}
		$ctime['minute'] = 0;
		$ctime['second'] = 0;
		
		$form['event']['end_exploded'] = $form['event']['start_exploded'];
	}
}

/**
 * Implementation of theme_mcc_event_header
 */

function theme_mc_event_view_header($view){
  // Important: Pager should be turned on, otherwise count will not work.
  $display = $view->current_display;
  $itemsDisplayed = $view->display[$display]->handler->options['items_per_page'];

  if (isset ($view->total_rows)){
    $count = $view->total_rows - $itemsDisplayed;
  }else{
    $count = count($view->result) - $itemsDisplayed;
  }
  $title = $view->display[$display]->display_title;
  return theme("mc_event_header",$title,$count, $view->see_all_link);
}

/**
 * Implementation of theme_mc_event_header
 */

function theme_mc_event_header($title,$count,$url){
    $output = '<div class="block more-head">';
    $output .= '<div class="block-title">';
    $output .= '<h3>'.$title.'</h3>';
    if($count > 0){
        $output .= l ("<span>+$count more</span><span class=\"ico-small ico-see-all\"></span>", $url,array('html' => TRUE));
    }
    $output .= '<span class="arrow"></span>';
    $output .= '</div></div>';
    
    return $output;
}


/**
 * Implementation of theme_mc_event_date()
 */
function theme_mc_event_date($unix_date_start = NULL, $unix_date_end = NULL, $has_end_date = NULL, $has_time = NULL, $hide_day = FALSE){
  $today = mktime(0, 0, 0);
  $yesterday = $today - 24 * 3600;
  $one_week_ago = $today - 7 * (24 * 3600);
  $output = '';
  $occurring = FALSE;
  
  if ($unix_date_start < time()){
    if ($unix_date_end < time()){
      $output .= t('Happened ');
    }else{
      // it's still ocuring today
      $occurring = TRUE;
      $output .= t('Happening now, ');
    }
  }
  
  $output .= '<span class="event-time">';
  if (!$hide_day){
    if ($occurring){
      //$output .= t('Today');
    }
    elseif ($unix_date_start < $yesterday &&  $unix_date_start > $one_week_ago) {
      $time_diff = time() - $unix_date_start;
      $output .= strip_tags(t('%time ago', array('%time' => format_interval($time_diff, 1))));
      $output .= ', ' . mc_api_format_day($unix_date_start);
    }
    else{
      $output .= mc_api_format_day($unix_date_start);
    }
  }
  
  // if it has a time, and it's not a past date
  if ($has_time){
    // if it has an end time, different than start time
    if ($has_end_date && (date('zHi', $unix_date_start) != date('zHi', $unix_date_end))){
      $time = mc_api_format_time($unix_date_start, $unix_date_end, $occurring);
    }else{
      $time = mc_api_format_time($unix_date_start, null, $occurring);
    }
    if (!$hide_day && !$occurring){
      $output .= ', ';
    } 
    $output .= $time;
  }
  else {
    if ($has_end_date){
      $time = mc_api_format_whole_day_event($unix_date_start, $unix_date_end, $occurring);
    }else{
      if($unix_date_start < $today){
        $time = mc_api_format_whole_day_event($unix_date_start, null, $occurring);
      }
      else {
        $time = '';
      }
    }
    $output .= $time;
  }

  $output .= '</span>';
  return $output;
}

function theme_mc_event_print_date($unix_date_start = NULL, $unix_date_end = NULL, $has_end_date = NULL, $has_time = NULL, $hide_day = FALSE){
  
  $output = '';
  
  
  $output .= '<span class="event-time">';
    
  $output .= mc_event_print_format_day($unix_date_start);
      
  // if it has a time, and it's not a past date
  if ($has_time && ($unix_date_start > time() || $occurring)){
    // if it has an end time, different than start time
    if ($has_end_date && (date('Hi', $unix_date_start) != date('Hi', $unix_date_end))){
      $time = mc_api_format_time($unix_date_start, $unix_date_end);
    }else{
      $time = mc_api_format_time($unix_date_start);
    }
    if (!$hide_day){
      $output .= ', ';
    } 
    $output .= $time;
  }

  $output .= '</span>';
  return $output;
}

function mc_event_print_format_day($unix_date){
  $output = "";
  if (date('Y') == date('Y', $unix_date)){ // same year
    $output .= date('l F jS', $unix_date);
  }else{ // different year
    $output .= date('l F jS, Y', $unix_date);
  }
  return $output;
}