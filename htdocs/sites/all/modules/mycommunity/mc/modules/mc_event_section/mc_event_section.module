<?php

function _mc_event_section_all(){
  $content = array();

  _mc_event_section_next_two_weeks($content);
  _mc_event_section_after_two_weeks($content);

  if(count($content)){
    print implode("\n",$content);
    $path = drupal_get_path('module', 'mc_event_section');
    drupal_add_js($path .'/js/mc_event_section.js', 'module', 'header', FALSE, TRUE, FALSE);
  }else{
    print "Wow, it's quiet around here.  Want to <a href='/node/add/event'>add an event</a> or <a href='/node/add/event-feed'>import an event feed</a>?";
  }
}

function _mc_event_section_next_two_weeks(&$content){
	$today = mktime(0, 0, 0);
  $now = time();
  $tomorrow = $today + 24 * 3600;
  $afterTomorrow = $tomorrow + 24 * 3600;
  $dayOfWeek = (int)date('w', $today);
  
  if ($dayOfWeek == 0){
    $thisSunday = $today;
  }else{
    $thisSunday = $today + (7 - $dayOfWeek) * 24 * 3600;
  }
  
  $nextSunday = $thisSunday + 7 * 24 * 3600;
  $minsago = $now - (60 * 30);

  $query = "SELECT n.nid, MAKEDATE(YEAR(FROM_UNIXTIME(e.unix_event_start)),DAYOFYEAR(FROM_UNIXTIME(e.unix_event_start))) as 'Day',
      CASE 
          WHEN ((e.unix_event_start BETWEEN '%s' AND '%s') OR (e.unix_event_end BETWEEN '%s' AND '%s'))
          THEN 'Today'
          WHEN e.unix_event_start BETWEEN '%s' AND '%s'
          THEN 'Tomorrow'
          WHEN e.unix_event_start BETWEEN '%s' AND '%s'
          THEN 'This week'
          WHEN e.unix_event_start BETWEEN '%s' AND '%s'
          THEN 'Next week'

      ELSE 'Upcoming'
      END AS 'Section'
  FROM node as n 
  JOIN event as e on n.nid=e.nid
  WHERE (e.unix_event_start between '%s' and '%s') OR (e.unix_event_end between '%s' and '%s')
  GROUP BY n.nid
  ORDER BY (
  CASE WHEN Section='Today' then 0
   WHEN Section='Tomorrow' then 1
   WHEN Section='This week' then 2
   WHEN Section='Next week' then 3
   WHEN Section='Upcoming' then 4
  ELSE Section
  END
  )";
  
  if ($dayOfWeek == 0){
    $twoSundaysFromNow = $nextSunday + 7 * 24 * 3600;
    $result = db_query($query, $now, $tomorrow, $now, $tomorrow, $tomorrow, $afterTomorrow, $afterTomorrow, $nextSunday, $nextSunday, $twoSundaysFromNow, $now, $twoSundaysFromNow, $now, $twoSundaysFromNow);
  }
  else{
    $result = db_query($query, $now, $tomorrow, $now, $tomorrow, $tomorrow, $afterTomorrow, $afterTomorrow, $thisSunday, $thisSunday, $nextSunday, $now, $nextSunday, $now, $nextSunday);
  }

  $lists = array();

  while ($row = db_fetch_object($result)) {
    $lists[$row->Section][$row->Day][] = $row->nid;
  }

  foreach($lists as $key => $list){
    if(count($list)){
      $content[] = _mc_event_section_print_view($key, $list);
    }
  }


}

function _mc_event_section_print_view($key, $list){

  switch($key){
    case 'Today':
    case 'Tomorrow':
      $block = "block_5";
      break;
    case 'This week':
    case 'Next week':
      $block = "block_1";
      break;
    default:
      $block = "block_2";
  }
  $view_header = new stdClass();
  $view_header->current_display = $block;
  $view_header->display[$block]->display_title = $key;
  $head = '<div class="view"><div class="view-header">';
  $head .= theme("mc_event_view_header",$view_header);
  $head .= '</div></div>';
  $output = '';
  foreach ($list as $day => $nids) {
    $output .= _mc_event_section_print_day_view($day, $nids, $key, $block);
  }
  return $head . $output;
}

function _mc_event_section_print_day_view($day, $list, $key, $block){
  $view = views_get_view('mc_events_by_dates');
  if (!$view || !$view->access($block)) {
    return;
  }
  if($key=='Today' || $key=='Tomorrow'){
    $view->hide_day = TRUE;
    if($key=='Today'){
      $view->day = 'today';
    }
  }

  if($view->hide_day){
    $head = '';
  }
  else {
    $date = strtotime($day);
    $head = '<div class="event-separator">';
    switch($key){
      case 'This week':
      case 'Next week':
        $head .= _mc_event_section_format_day($date);
        break;
      default:
        $head .= _mc_event_section_format_week($date);
    }
    $head .= '</div>';
  }
  $view_display =$view->preview($block, array(implode('+', $list)));
  return $head.$view_display;
}

function _mc_event_section_format_day($date){
  return date('l', $date);
}

function _mc_event_section_format_week($date){
  if(function_exists('_mc_date_calender_week')){
    $week = _mc_date_calender_week($date);
    $year = date('Y',$date);
    $firstdayts = _mc_date_week_firstday($week,$year);
    if($year > date('Y')){
      return "Week of ". date('F jS Y',$firstdayts);
    }else{
      return "Week of ". date('F jS',$firstdayts);
    }
  }
}

function _mc_event_section_after_two_weeks(&$content){
  $today = mktime(0, 0, 0);
  $now = time();
  $tomorrow = $today + 24 * 3600;
  $afterTomorrow = $tomorrow + 24 * 3600;
  $dayOfWeek = (int)date('w', $today);
  
  if ($dayOfWeek == 0){
    $thisSunday = $today;
  }else{
    $thisSunday = $today + (7 - $dayOfWeek) * 24 * 3600;
  }
  
  $nextSunday = $thisSunday + 7 * 24 * 3600;
  $minsago = $now - (60 * 30);

  $query = "SELECT n.nid, MAKEDATE(YEAR(FROM_UNIXTIME(e.unix_event_start)),(7*(WEEKOFYEAR(FROM_UNIXTIME(e.unix_event_start)) -1)  + 1)) as 'Day',
      CASE 
          WHEN e.unix_event_start > '%s'
          THEN 'Upcoming'
      END AS 'Section'
  FROM node as n 
  JOIN event as e on n.nid=e.nid
  WHERE e.unix_event_start > '%s'
  GROUP BY n.nid
  ORDER BY (
  CASE WHEN Section='Today' then 0
   WHEN Section='Tomorrow' then 1
   WHEN Section='This week' then 2
   WHEN Section='Next week' then 3
   WHEN Section='Upcoming' then 4
  ELSE Section
  END
  )";
  
  if ($dayOfWeek == 0){
    $twoSundaysFromNow = $nextSunday + 7 * 24 * 3600;
    $result = db_query($query, $twoSundaysFromNow, $twoSundaysFromNow);
  }
  else{
    $result = db_query($query, $nextSunday, $nextSunday);
  }

  $lists = array();

  while ($row = db_fetch_object($result)) {
    switch($row->Section){
      case 'Upcoming':
        $lists['Upcoming'][$row->Day][] = $row->nid;
        break;
    }
  }

  foreach($lists as $key => $list){
    if(count($list)){
        $content[] = _mc_event_section_print_view($key, $list);
    }
  }

}

function _mc_event_section_formatted_location($location){
  if(preg_match("/webinar/i", $location)){
    return $location;
  }
  else {
    if(!empty($location) || $location!=NULL){
      return 'at <span class="location">' . $location .'</span>';
    }
    else{
      return;
    }
  }
}

function mc_event_section_views_query_alter(&$view, &$query) {
  if($view->current_display=='block_5' && $view->name=='mc_events_by_dates'){
    if(isset($view->day) && $view->day=='today'){
      $new_condition = '(CASE WHEN (UNIX_TIMESTAMP(now()) - event_unix_event_start)<=0 THEN 1  WHEN (UNIX_TIMESTAMP(now()) - event_unix_event_start)>0 THEN 0 END) DESC';
      $another_condition = 'abs(UNIX_TIMESTAMP(now()) - event_unix_event_start)';
      array_unshift($query->orderby, $new_condition);
      $query->orderby['0'] = $another_condition;
    }
  }
}