<?php

/**
 * @todo add the correct classes to the page (maybe use context as well)
 * #todo display suite url not to be accessable though any other node but webform http://local.sje.mycommunity.org/admin/content/node-type/webform/display/mc_og_forms
 *
*/

//default value for var: mc_og_forms_contact_nid
define('MC_OG_FORMS_CONTACT_NID_DEFAULT',989);

function _mc_og_forms_theme(){
  return array(
    'mc_og_forms_contact' => array(
      'arguments' => array('forums' => NULL, 'topics' => NULL, 'parents' => NULL, 'tid' => NULL, 'sortby' => NULL, 'forum_per_page' => NULL),
      //'template' => 'og-form-contact',
    ),
  );
}

function mc_og_forms_contact($form_stats,$nid){

  $form = array();

  $form['name'] = array(
    '#type' => 'textfield',
    '#title' => "Your Name",
    '#required' => true
  );

  $form['email'] = array(
    '#type' => 'textfield',
    '#title' => "Your E-mail",
    '#required' => true
  );

  $form['subject'] = array(
    '#type' => 'textfield',
    '#title' => "Subject",
    '#required' => true
  );

  $form['message'] = array(
    '#type' => 'textarea',
    '#title' => "Message",
    '#required' => true
  );

  $form['nid'] = array('#type' => 'value', '#value' => $nid);

  $form['submit'] = array('#type' => 'submit', '#value' => t('Submit'));

  $form['#redirect'] = 'node/'.$nid;

  return $form;
}

function mc_og_forms_mail($key, &$message, $params){
  $account = $params['account'];
  $vars = $params['vars'];
  $vars += user_mail_tokens($account,language_default());

  //dsm($vars,'emailvars');

  switch($key){
    case 'contact':
      //adding cc field/header
      if(variable_get("mc_og_forms_contact_cc",null)){
        $message['headers']['Cc'] = variable_get("mc_og_forms_contact_cc","");
      }

      //adding bcc field/header
      if(variable_get("mc_og_forms_contact_bcc",null)){
        $message['headers']['Bcc'] = variable_get("mc_og_forms_contact_bcc",null);
      }

      //message subject and body from the form settings
      $message['subject'] = t(variable_get("mc_og_forms_contact_subject",""),$vars);
      $message['body'][] = t(variable_get("mc_og_forms_contact_body",""),$vars);

    break;
  }
}

function _og_managers_emails($nid){
  $sql = og_list_users_sql(1,1);
  $result = db_query($sql,$nid);
  $mangers = array();
  while($row = db_fetch_object($result)){
    $mangers[$row->uid] = $row->mail;
  }

  return $mangers;
}

function mc_og_forms_contact_validate($form,&$form_state){

  $mail = $form_state['values']['email'];

  //validate email address
  if(!valid_email_address($mail)){
    form_set_error('email',"invalid email address");
  }
}

function mc_og_forms_contact_submit($form, &$form_state){
  global $user;

  //fields
  $fields = array('name','email','subject','message');

  $nid = $form_state['values']['nid'];
  $form_vals = $form_state['values'];
  $node = node_load($nid);
  $managers = _og_managers_emails($nid);
  $from = '"'. addslashes(mime_header_encode($form_vals['name'])) .'" <'. $form_vals['email'] .'>';
  $params['account'] = $user;

  $params = array();
  $params['nid'] = $nid;
  $params['node'] = $node;
  $params['vars'] = array();
  $params['vars']['!nid'] = $nid;
  $params['vars']['!name'] = $form_state['values']['name'];
  $params['vars']['!email'] = $form_state['values']['email'];
  $params['vars']['!subject'] = $form_state['values']['subject'];
  $params['vars']['!message'] = $form_state['values']['message'];

  drupal_mail("mc_og_forms",'contact',implode(", ",$managers),language_default(),$params,$form);

  drupal_set_message(
    t("Thank you for contacting !gname! We'll be in touch shortly.",array(
      '!gname' => l($node->title,"node/".$node->nid)
    ))
  );
}

function is_mc_og_form_contact($node){
  if(variable_get("mc_og_forms_contact_nid",MC_OG_FORMS_CONTACT_NID_DEFAULT) == $node->nid){
    return true;
  }
  return false;
}


function mc_og_forms_contact_settings(){
  $form = array();
  $form['mc_og_forms_contact_admin'] = array(
    '#type' => "checkbox",
    '#title' => "Email Administrator (user 1)",
    "#default_value" => variable_get('mc_og_forms_contact_admin',0)
  );

  $form['mc_og_forms_contact_subject'] = array(
    '#title' => 'Subject',
    '#type' => 'textfield',
    "#default_value" => variable_get('mc_og_forms_contact_subject',NULL)
  );

  $form['mc_og_forms_contact_body'] = array(
    '#title' => 'Body',
    '#type' => 'textarea',
    "#default_value" => variable_get('mc_og_forms_contact_body',NULL)
  );

  $form['mc_og_forms_contact_cc'] = array(
      '#title' => 'CC',
      '#type' => 'textfield',
      "#default_value" => variable_get('mc_og_forms_contact_cc',NULL)
  );

  $form['mc_og_forms_contact_bcc'] = array(
    '#title' => 'BCC',
    '#type' => 'textfield',
    "#default_value" => variable_get('mc_og_forms_contact_bcc',NULL)
  );

  $form['tokens_help'] = array(
    '#title' => 'Available Tokens',
    '#value' => 'textarea'
  );

  return system_settings_form($form);
}

function get_available_tokens(){
  return array(
    '!nid' => '',
    '!name' => '',
    '!email' => '',
    '!subject' => '',
    '!message' => ''
  );
}

/**
 * hook_menu
 * @return array
 * @see http://api.drupal.org/api/drupal/developer%21hooks%21core.php/function/hook_menu/6
 */
function mc_og_forms_menu(){

  $items['admin/mc/mc_og_forms'] = array(
    'type' => MENU_NORMAL_ITEM,
    'title' => 'OG Forms',
    'access arguments' => array(true),
    'page callback' => 'mc_admin_home'
  );

  $items['admin/mc/mc_og_forms/contact'] = array(
    'title' => 'Contact form settings',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array("mc_og_forms_contact_settings"),
    'access arguments' => array(true),
  );

  $items['node/%node/contact'] = array(
    'title' => 'Contact',
    'page callback' => '_mc_og_forms_contact',
    'page arguments' => array(1),
    'access callback' => '_mc_og_forms_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * check if the current node is group node
 * @param $node
 * @return bool
*/
function _mc_og_forms_access($node){
  return og_is_group_type($node->type);
}

/**
 * node/%og/contact callback function
 * @param $node
 * @return mixed|string
 */
function _mc_og_forms_contact($node){
  _og_managers_emails($node->nid);
  return drupal_get_form("mc_og_forms_contact",$node->nid);
}