<?php
// $Id: eazylaunch.module,v 1.1.2.2 2011/01/31 21:33:24 tdway Exp $
/**
 * Implement hook_menu().
 */
function eazylaunch_menu() {
  $items['eazylaunch/js'] = array(
    'page callback' => 'eazylaunch_js',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['eazylaunch/flush'] = array(
    'title' => 'Flush All Cache',
    'page callback' => 'eazylaunch_flush',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );
  $items['eazylaunch/flush/menu'] = array(
    'title' => 'Flush Menu Router',
    'page callback' => 'eazylaunch_flush',
    'page arguments' => array('menu router'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );
  $items['eazylaunch/flush/theme'] = array(
    'title' => 'Flush Theme Registry',
    'page callback' => 'eazylaunch_flush',
    'page arguments' => array('theme registry'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );
  $items['eazylaunch/flush/cache'] = array(
    'title' => 'Flush Admin Cache',
    'page callback' => 'eazylaunch_flush',
    'page arguments' => array('admin cache'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );
  $items['eazylaunch/flush/requisites'] = array(
    'title' => 'Flush JS and CSS cache',
    'page callback' => 'eazylaunch_flush',
    'page arguments' => array('js and css'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implementation of hook_perm().
 */
function eazylaunch_perm() {
  return array('access eazylaunch');
}

function eazylaunch_init() {
  if (user_access('access eazylaunch')) {
    $path = drupal_get_path('module', 'eazylaunch');
    drupal_add_js("$path/jq/jquery.autocomplete.pack.js");
    drupal_add_css("$path/jq/jquery.autocomplete.css");
    drupal_add_js("$path/eazylaunch.js");
    drupal_add_css("$path/eazylaunch.css");
  }
}

function eazylaunch_js() {
  echo drupal_to_js(eazylaunch_load());
  exit();
}

function eazylaunch_load() {
  global $user, $language;
  $cid = "eazylaunch:$user->uid:$language->language";
  $cache = cache_get($cid, 'cache');
  $eazylaunch = $cache->data;

  if (!$eazylaunch) { //if not found in cache, build it
    $result = db_query("SELECT * from {menu_custom}");
    $links = array();
    while ($menu = db_fetch_object($result)) {
      $links = array_merge($links, eazylaunch_menulinks_build(menu_tree_all_data($menu->menu_name), $menu->title, TRUE));
    }
    if (module_exists('devel')) {
      foreach (devel_switch_user_list() as $item) {
        $links[] = array('title' => "Switch User - " . $item['title'], 'href' => base_path() . drupal_get_path_alias($item['href']));
      }
    }
    $links[] = array('title' => "Run cron.php", 'href' => base_path() . "cron.php");
    $links[] = array('title' => "Run update.php", 'href' => base_path() . "update.php");
    $eazylaunch = array('eazylaunch' => array('links' => $links, 'details' => t("Start typing a menu item (e.g. admin). Type ? to browse top level.")));
    cache_set($cid, $eazylaunch, 'cache', CACHE_TEMPORARY);
  }

  return $eazylaunch;
}

function eazylaunch_menulinks_build($tree, $prefix = NULL, $isroot = FALSE) {
  $links = array();
  foreach ($tree as $item) {
    $title = $item['link']['title'];
    $href = $item['link']['href'];
    if (!$title) continue;
    if ($item['link']['type'] == MENU_CALLBACK && strpos($href, 'eazylaunch') !== 0 && in_array($item['link']['menu_name'], array("navigation", "admin"))) continue; // Skip menu callbacks in the navigation and admin menus.
    if ($prefix && !in_array($prefix, array("Navigation", "Administer"))) $title = "$prefix - $title"; //Navigation and Administer are unneeded
    $link = array('title' => $title, 'href' => base_path() . drupal_get_path_alias($href));
    if ($isroot || $prefix == "Administer" || $title == "Administer" || strpos($title, "Flush") === 0) $link['root'] = 'true';
    $links[] = $link;
    if ($item['below']) $links = array_merge($links, eazylaunch_menulinks_build($item['below'], $title));
  }
  return $links;
}

//we aren't using this right now, but it returns a list of top level admin menu items. if we ever use this we should change it to a ul list
function eazylaunch_details($menu_name) {
  $output = "Start typing a menu item or browse below<br/>";
  $tree = menu_tree_all_data($menu_name);
  foreach ($tree as $item) {
    if ($item['link']['title'] == "Administer" && $item['below']) {
      foreach ($item['below'] as $child) {
        if (isset($child['link']['type']) && $child['link']['type'] == MENU_CALLBACK) continue; // Skip menu callbacks (mostly dynamic items).
        $output .= "<br/>" . l($child['link']['title'], $child['link']['href']);
      }
    }
  }
  return $output;
}

//Adapted from admin_menu
function eazylaunch_flush($name = 'all cache') {
  switch ($name) {
    case 'menu router':
      menu_rebuild();
      break;
    case 'admin cache': // Don't clear cache_form - in-progress form submissions may break. Ordered so clearing the page cache will always be the last action.
      $core = array('cache', 'cache_block', 'cache_filter', 'cache_page');
      $cache_tables = array_merge(module_invoke_all('flush_caches'), $core);
      foreach ($cache_tables as $table) cache_clear_all('*', $table, TRUE);
      break;
    case 'js and css': // Change query-strings on css/js files to enforce reload for all users.
      _drupal_flush_css_js();
      drupal_clear_css_cache();
      drupal_clear_js_cache();
      break;
    case 'theme registry':
      module_invoke('system', 'theme_data');
      drupal_rebuild_theme_registry();
      break;
    default: // Flush all caches; no need to re-implement this.
      drupal_flush_all_caches();
      break;
  }
  drupal_set_message(t("Flushed @type.", array('@type' => $name)));
  drupal_goto();
}

function eazylaunch_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list': 
      $block[0] = array(
        'info' => t('EazyLaunch Block'),
        'admin' => TRUE,
        'cache' => BLOCK_NO_CACHE,
      );
      break;
    case 'view':
      switch ($delta) {
        case 0:
          $block['subject'] = 'EazyLaunch';
          $block['content'] = 'Loading...';
          break;
      }
  }
  return $block;
}