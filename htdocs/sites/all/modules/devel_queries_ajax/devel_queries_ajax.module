<?php

/**
 * @file
 * Devel Queries Ajax module moves Devel query information to an AJAX request
 * to reduce page loading time and to show detailed queries only when needed.
 * 
 * Copyright by Andrey Tretyakov (http://drupal.org/user/169459).
 */

/**
 * Implementation of hook_menu().
 */
function devel_queries_ajax_menu() {
  $items['devel/queries/list/%ctools_js/%/%'] = array(
    'title' => 'Devel query list',
    'page callback' => 'devel_queries_ajax_page',
    'page arguments' => array(3, 4, 5),
    'access callback' => '_devel_queries_ajax_access',
    'access arguments' => array(4, 5),
  );
  return $items;  
}

function _devel_queries_ajax_access($uid, $log_id) {
  return (is_numeric($log_id) 
          && user_access('access devel information') 
          && $uid != 0 
          && ($GLOBALS['user']->uid == $uid || $GLOBALS['user']->uid == 1)
  );
}

/**
 * Page callback to output query log.
 * 
 * @param $js
 *  selector between ajax and nojs output (prepared by CTools).
 * @param $uid
 *  user id whose query log is being viewed
 * @param $log_id
 *  unique id of the query log
 */
function devel_queries_ajax_page($js = FALSE, $uid, $log_id) {
  $key = _devel_queries_ajax_key($uid, $log_id);
  $cache = cache_get($key, 'cache');

  if ($cache && isset($cache->data)) {
    $query_log = $cache->data;
    $output = theme('devel_queries_ajax_querylog_table', $query_log['header'], $query_log['rows']);
  }
  else {
    $output = t('Query information is missing: probably it has expired. Please try a newer page. If you still get this error check that your cache is functioning.');
  }

  if ($js) {
    ctools_include('ajax');

    $commands = array();
    $commands[] = ctools_ajax_command_replace('#devel-ajax-querylog', $output);
    $commands[] = ctools_ajax_command_css('#devel-ajax-querylog-wrapper', array('visibility' => 'visible'));
    $commands[] = ctools_ajax_command_remove('#devel-ajax-query-link');

    ctools_ajax_render($commands);
  }
  else {
    return $output;
  }
}

function _devel_queries_ajax_key($uid, $log_id) {
  return 'devel_query_log_' . $uid . '_' . $log_id;
}

/**
 * Implementation of hook_init().
 */
function devel_queries_ajax_init() {
  if (user_access('access devel information')
      && variable_get('devel_query_display', FALSE)
     ) {
    ctools_add_js('ajax-responder');
    drupal_add_js('misc/collapse.js');
  }
}

/**
 * Implementation of hook_theme().
 */
function devel_queries_ajax_theme() {
  return array(
    'devel_queries_ajax_querylog_link' => array(
      'arguments' => array('log_id' => NULL),
    ),
    'devel_queries_ajax_querylog_table' => array(
      'arguments' => array('header' => array(), 'rows' => array()),
    ),
    'devel_queries_ajax_querylog_wrapper' => array(
      'arguments' => array(), 
    ),
  );
}

/**
 * Implementation of hook_theme_registry_alter().
 */
function devel_queries_ajax_theme_registry_alter(&$theme_registry) {
  $theme_registry['devel_querylog']['function'] = 'devel_queries_ajax_devel_querylog';   
}

/**
 * Theme query log wrapper (a fieldset by default) to display when returned by
 * AJAX request.
 */
function theme_devel_queries_ajax_querylog_wrapper() {
  $fieldset = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#title' => t('Database queries'),
    '#value' => '<div id="devel-ajax-querylog"></div>',
    '#attributes' => array('id' => 'devel-ajax-querylog-wrapper', 'style' => 'visibility:hidden'),
  );
  return theme('fieldset', $fieldset);
}

/**
 * Override of theme_devel_querylog() function.
 */
function devel_queries_ajax_devel_querylog($header = array(), $rows = array()) {
  if (empty($header) && empty($rows)) {
    return;
  }
  
  // Make anonymous users accessing Devel possible: always show query log on 
  // the same page only to prevent users from spying on each other's query logs.
  if ($GLOBALS['user']->uid == 0) {
    return theme('devel_queries_ajax_querylog_table', $header, $rows);
  }
  
  // This should be unique enough. Collisions are almost harmless anyway.
  $log_id = mt_rand();
  $cid = _devel_queries_ajax_key($GLOBALS['user']->uid, $log_id);
  
  // 10 minutes by default.
  $expire = time() + variable_get('devel_queries_ajax_querylog_lifetime', 600);
  
  $query_log = array('header' => $header, 'rows' => $rows);
  cache_set($cid, $query_log, 'cache', $expire);
  
  $output  = theme('devel_queries_ajax_querylog_link', $log_id);
  $output .= theme('devel_queries_ajax_querylog_wrapper');

  return $output;
}

/**
 * Overridable function to render query log table. Override it instead of 
 * theme_devel_querylog().
 */
function theme_devel_queries_ajax_querylog_table($header, $rows) {
  return theme_devel_querylog($header, $rows);
}

/**
 * Theme link to activate AJAX callback showing query log.
 * 
 * @param $log_id
 *  unique query log id
 */
function theme_devel_queries_ajax_querylog_link($log_id) {
  $options = array('attributes' => array('id' => 'devel-ajax-query-link', 'class' => 'ctools-use-ajax'));
  $text = t('For convenience and performance reasons, devel query log is hidden. Click here to see it.');
  return l($text, "devel/queries/list/nojs/" . $GLOBALS['user']->uid . "/$log_id", $options);
}
