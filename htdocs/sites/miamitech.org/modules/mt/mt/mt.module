<?php
/**
 * @file
 * Code for the mt feature.
 */

include_once 'mt.features.inc';

/*
 * @todo: https://app.asana.com/0/1947405877174/1947670111015
 */
function mt_jqmulti_files(){
  $theme = drupal_get_path("theme","miamitech");
  return array(
    $theme."/js/jquery.qtip.min.js"
  );
}

/*
 * @todo: https://app.asana.com/0/1947405877174/1955527457973
 */
function theme_imgplaceholder($gname,$gid){

  $range_colors = array(
    '1-15' => array("red","white"),
    '16-25' => array("orange","black"),
    '26-35' => array("purple","white"),
	'35-50' => array("green","white"),
    'else' => array("blue","white")
  );

  $colors_use = array();
  $gfirst = strtolower($gname[0]);

  foreach($range_colors as $range => $colors){
    $lt = explode("-",$range);

    if(count($lt) > 1){
      if(strlen($gname) >= $lt[0] && strlen($gname) <= $lt[1]){
        $colors_use = $colors;
        break 1;
      }
    }
  }

  if(empty($colors_use)){
    $colors_use =  $range_colors['else'];
  }

  $glink = url("node/".$gid);
  return "<div class=\"img-placeholder\"><a class=\"img\" href='$glink'><img src='/sites/miamitech.org/themes/miamitech/images/icons/ico-event.png'/></a></div>";
}

function mt_count_user_ct($type){
  global $user;
  return db_result(db_query("SELECT Count(node.nid) FROM node WHERE node.type = '%s'  AND node.uid = %d",$type,$user->uid));
}

function mt_ds_fields($type_name, $build_mode, $extra) {
  $fields = array(
    'mt_add_ical' => array(
      'title' => t('Add to Calendar'),
      'exclude' => array(
        'group' => 'group',
        'link' => 'link',
        'webform' => 'webform',
        'article' => 0,
        'audio' => 0,
        'event' => 0,
        'feeds' => 0,
        'file' => 0,
        'nnews' => 0,
        'npage' => 0,
        'place' => 0,
        'video' => 0,
        'gallery' => 0,
        'gallery_image' => 0,
        'forum' => 0,
        'taxonomy_feature' => 0,
      ),
      'type' => DS_FIELD_TYPE_CODE,
      'status' => DS_FIELD_STATUS_CUSTOM,
      'properties' => array(
        'css-class' => 'field-ical',
        'formatters' => array(
          'ds_eval_code' => 'Default',
        ),
        'code' => '<?php 
          print mt_add_ical($object);
        ?>',
        'token' => 0,
      ),
    ),
    'mt_add_group_ical' => array(
      'title' => t('Add Group to Calendar iCal'),
      'exclude' => array(
        'group' => 'group',
        'link' => 'link',
        'webform' => 'webform',
        'article' => 0,
        'audio' => 0,
        'event' => 0,
        'feeds' => 0,
        'file' => 0,
        'nnews' => 0,
        'npage' => 0,
        'place' => 0,
        'video' => 0,
        'gallery' => 0,
        'gallery_image' => 0,
        'forum' => 0,
        'taxonomy_feature' => 0,
      ),
      'type' => DS_FIELD_TYPE_CODE,
      'status' => DS_FIELD_STATUS_CUSTOM,
      'properties' => array(
        'css-class' => 'field-group-ical',
        'formatters' => array(
          'ds_eval_code' => 'Default',
        ),
        'code' => '<?php 
          print mt_add_group_ical($object);
        ?>',
        'token' => 0,
      ),
    ),
    'mt_add_myevents' => array(
      'title' => t('Add To My events'),
      'exclude' => array(
        'group' => 0,
        'link' => 0,
        'webform' => 0,
        'article' => 0,
        'audio' => 0,
        'event' => 0,
        'feeds' => 0,
        'file' => 0,
        'nnews' => 0,
        'npage' => 0,
        'place' => 0,
        'video' => 0,
        'gallery' => 0,
        'gallery_image' => 0,
        'forum' => 0,
        'taxonomy_feature' => 0,
      ),
      'type' => DS_FIELD_TYPE_THEME,
      'status' => DS_FIELD_STATUS_DEFAULT,
      'properties' => array(
        'css-class' => 'field-add-myevents',
        'formatters' => array(
          'myevents_flag_link' => t('Default'),
        ),
        'token' => 0,
      ),
    ),
    'mt_add_group_rss' => array(
      'title' => t('Add Group to Calendar RSS'),
      'exclude' => array(
        'group' => 'group',
        'link' => 'link',
        'webform' => 'webform',
        'article' => 0,
        'audio' => 0,
        'event' => 0,
        'feeds' => 0,
        'file' => 0,
        'nnews' => 0,
        'npage' => 0,
        'place' => 0,
        'video' => 0,
        'gallery' => 0,
        'gallery_image' => 0,
        'forum' => 0,
        'taxonomy_feature' => 0,
      ),
      'type' => DS_FIELD_TYPE_CODE,
      'status' => DS_FIELD_STATUS_CUSTOM,
      'properties' => array(
        'css-class' => 'field-group-ical',
        'formatters' => array(
          'ds_eval_code' => 'Default',
        ),
        'code' => '<?php 
          print mt_add_group_rss($object);
        ?>',
        'token' => 0,
      ),
    ),
    'mt_add_gcal' => array(
      'title' => t('Add to Google Calendar'),
      'exclude' => array(
        'group' => 'group',
        'link' => 'link',
        'webform' => 'webform',
        'article' => 0,
        'audio' => 0,
        'event' => 0,
        'feeds' => 0,
        'file' => 0,
        'nnews' => 0,
        'npage' => 0,
        'place' => 0,
        'video' => 0,
        'gallery' => 0,
        'gallery_image' => 0,
        'forum' => 0,
        'taxonomy_feature' => 0,
      ),
      'type' => DS_FIELD_TYPE_CODE,
      'status' => DS_FIELD_STATUS_CUSTOM,
      'properties' => array(
        'css-class' => 'field-gcal',
        'formatters' => array(
          'ds_eval_code' => 'Default',
        ),
        'code' => '<?php 
          print mt_add_gcal($object);
        ?>',
        'token' => 0,
      ),
    ),
  );
  return array('nd' => $fields);
}

function mt_theme() {
  $theme_functions = array(
    'mt_location_textfield' => array(
      'arguments' => array('field' => NULL),
    ),
    'mt_location_gmap_default' => array(
      'arguments' => array('field' => NULL),
    ),
    'mt_location_directions' => array(
      'arguments' => array('field' => NULL),
    ),
    'myevents_flag_link' => array(
      'arguments' => array('field' => NULL),
    )
  );
  return $theme_functions;
}

function mt_add_group_rss($node){
  foreach ($node->og_groups as $key => $value) {
    $gid=$key;
    break;
  }
  return '<span class="rss-group-ico"> </span><a class="ical-link" href="http://'. $_SERVER["SERVER_NAME"] .'/groups/' . $gid . '/rss">All events from this group (RSS)</a>';
}

function mt_add_group_ical($node){
  foreach ($node->og_groups as $key => $value) {
    $gid=$key;
    break;
  }
  return '<span class="ical-group-ico"> </span><a class="ical-link" href="webcal://'. $_SERVER["SERVER_NAME"] .'/group/' . $gid . '/ical">All events from this group (iCal)</a>';
}

function mt_add_ical($node){
  return '<span class="ical-ico">Image</span><a class="ical-link" href="webcal://'. $_SERVER["SERVER_NAME"] .'/node/' . $node->nid . '/ical">Just this event (iCal)</a>';
}

function mt_add_gcal($node){
  $title = urlencode($node->title);
  $description = urlencode(strip_tags($node->content['body']['#value']));
  $location = _mc_api_format_location($node->location);
  $start_date = event_format_date($node->event['start_utc'], 'custom', "Ymd\THis\Z");
  $end_date = event_format_date($node->event['end_utc'], 'custom', "Ymd\THis\Z");
  return '<span class="gcal-ico">Image</span><a target="_blank" class="ical-link" href="http://www.google.com/calendar/render?action=TEMPLATE&text=' . $title . '&details=' . $description . '&dates=' . $start_date .'/' . $end_date . '&location='. $location  .'">Just this event (gCal)</a>';
}

function mt_form_alter(&$form, &$form_state, $form_id){
  global $user;

  if($form_id=='event_node_form'){
    if(isset($form['field_online_event'])){
      $form['field_place']['0']['#prefix'] = '<div class="default-location-wrapper">';
      $form['field_place']['0']['#suffix'] = "</div>";
      if(isset($form['#node'])){
        if($form['#node']->field_online_event[0]['value']){
          $form['field_place']['0']['#prefix'] = '<div class="default-location-wrapper hidden">';
        }
      }
      drupal_add_js((drupal_get_path('module', 'mt') .'/js/mt_online_location.js'));
      drupal_add_css((drupal_get_path('module', 'mt') .'/css/mt_online_location.css'));
    }
  }

  if ($form['#id'] == 'node-form') {
    if (isset($form['locations'][0]) && $form['locations'][0]['#default_value']['province']=='NY' && $form['locations'][0]['#default_value']['city']=='Harlem' ) {
      $form['locations'][0]['#default_value'] = array(
        'city' => '',
        'province' => 'FL',
        'country' => 'us'
      );
    }
  }
}

function _schema_meta_date($ts,$itemprop = 'startDate'){
  $iso_start = date('c',$ts);
  return "<meta itemprop=\"$itemprop\" content=\"$iso_start\">";
}

function mt_ds_fields_alter(&$fields) {
  $fields['nd_directions']['properties']['formatters']['mt_location_directions'] = 'MT Format';
  $fields['nd_location_name'] = $fields['name'];
  $fields['nd_location_name']['properties']['formatters']['mt_location_textfield'] = t('MT Textfield');
  unset($fields['name']); 

  unset($fields['nd_location_gmap']['properties']['formatters']['nd_location_gmap_default']);
  $fields['nd_location_gmap']['properties']['formatters']['mt_location_gmap_default'] = 'Gmap MT';
}

function theme_mt_location_directions($field) {
  $node = node_load($field['object']->field_place[0]['nid']);
  if(empty($node->location['street'])){
    return;
  }
  $destination = array();
  $fields = array('street', 'city', 'province_name', 'postal_code');
  foreach ($fields as $key) {
    if (!empty($node->location[$key])) {
      $destination[] = check_plain($node->location[$key]);
    }
  }
  if (!empty($destination)) {
    $link ='<a href="http://maps.google.com/?daddr='. urlencode(implode($destination, '+')) .'" target="_blank">'. t('Get Directions') .'</a>';
    return $link;
  }
}

function theme_mt_location_gmap_default($field) {
  $field['format'] = 'nd_location_gmap';
  $field['formatter'] = 'nd_location_gmap_default';
  $node = node_load($field['object']->field_place[0]['nid']);
  if(isset($node->location) && ((!empty($node->location['street']) || !empty($node->location['city']) || !empty($node->location['province']) || !empty($node->location['postal_code'])) || ($node->location['latitude']!='0.000000' && $node->location['longitude']!='0.000000' ) ) ){
    if (!empty($node->location['latitude']) && !empty($node->location['longitude'])) {

      // Defaults.
      $zoom = 'default';
      $width = 'default';
      $height = 'default';
      $latitude = $node->location['latitude'];
      $longitude = $node->location['longitude'];
      if($latitude=='0.000000' && $longitude=='0.000000'){
        $address = $node->location['street'] . ' ' . $node->location['city'] . ' ' . $node->location['province'] . ' ' . $node->location['postal_code'];
        $results = mt_event_feed_google_get_georeference($address);
        $longitude = $results['longitude']; 
        $latitude = $results['latitude'];
      }
      $autoclick = FALSE;

      // Check format.
      $format = str_replace('nd_location_gmap_', '', $field['formatter']);
      if ($format != 'default') {
        $formatters = variable_get('nd_location_formatters', array());
        $formatter = $formatters[$format];
        $width = $formatter['width'] .'px';
        $height = $formatter['height'] .'px';
        $zoom = $formatter['zoom'];
        $autoclick = (isset($formatter['autoclick'])) ? $formatter['autoclick'] : FALSE;
      }
      $is_only_state_provided = empty($node->location['street']) && empty($node->location['city']) && empty($node->location['postal_code']) && !empty($node->location['province']);
      if($is_only_state_provided){
        $zoom = '7';
      }
      return theme('nd_location_gmap', $field, $latitude, $longitude, $width, $height, $zoom, $autoclick);
    }
  }
}

function theme_mt_location_textfield($field) {
  if($field['key']=='nd_location_name'){
    $field['key']='name';
  }
  if (!empty($field['object']->location[$field['key']])) {
    $value = $field['object']->location[$field['key']];
    if ($field['key'] == 'country') {
      $value = $field['object']->location['country_name'];
    }
    if ($field['key'] == 'province') {
      $value = $field['object']->location['province_name'];
    }
    if ($field['key'] == 'locpick') {
      // Latitude.
      $value  = '';
      list($degrees, $minutes, $seconds, $negative) = location_dd_to_dms($field['object']->location['latitude']);
      $value .= "${degrees}° ${minutes}' ${seconds}\" ";
      if (!$negative) {
        $value .= 'N';
      }
      else {
        $value .= 'S';
      }
      // Longitude
      list($degrees, $minutes, $seconds, $negative) = location_dd_to_dms($field['object']->location['longitude']);
      $value .= ", ${degrees}° ${minutes}' ${seconds}\" ";
      if (!$negative) {
        $value .= 'E';
      }
      else {
        $value .= 'W';
      }
    }
    return check_plain($value);
  }
}

function theme_myevents_flag_link($field){
  $node = $field['object'];
  global $user;

  if($user->uid){
    return flag_create_link('events_bookmarks', $node->nid);
  }else{
    return '<span class="flag-events-bookmarks unknown" ><a href="#" class="flag-action">Save to my events</a></span>';
  }
}

function mt_init(){
  if(arg(0)=='node' && is_numeric(arg(1))){
    $node = node_load(arg(1));
    if($node->type=='event'){
      drupal_add_js((drupal_get_path('module', 'mt') .'/js/mt.js'));
    }
  }
}

/* Disabled Section */
function _mt_mail_alter(&$message){
  $site_name = variable_get('site_name', '');
  $message['from'] = '"' . $site_name . '" <' .  $message['from'] . '>';
  $message['headers']['From'] = $message['from'];
  $message['headers']['Sender'] = $message['from'];
}

function _mt_preprocess_views_view_field(&$variables, $hook) {
  if($variables['view']->name=='og_details'){
    if($variables['field']->field=="field_header_color_value"){
      $field = $variables['field'];
      $alias = $field->field_alias;
      if(!isset($variables['row']->$alias)){
        $widget = _mt_defaultimg_nodefield_widget_settings('field_header_color');
        $default_value = $widget['default_value']['0']['value'];
        $variables['row']->$alias = $default_value;
      }
    }
  }
}

function _mt_defaultimg_nodefield_widget_settings($field_name) {
  $sql = " SELECT widget_settings FROM {content_node_field_instance} WHERE field_name = '%s' ";
  return unserialize(db_result(db_query($sql, $field_name)));
}

function NO_mt_node_permissions($op, $node, $account = NULL){
  global $user;
  if(array_search('publisher', $user->roles)){
    return false;
  }
  return node_access($op, $node);
}

function NO_mt_access_node_edit($node) {
  // Am I a group admin for this group post?
  if (!module_exists('og_access') && isset($node->og_groups)) {
    foreach ($node->og_groups as $gid) {
      if (og_is_group_admin(node_load($gid))) {
        return TRUE;
      }
    }
  }

  // Am I group admin for this group node?
  if (!module_exists('og_access') && og_is_group_admin($node)) {
    return TRUE;
  }

  global $user;
  if($node->type!='group' && $node->type!='event' && $node->type!='event_feed'){
    if(array_search('publisher', $user->roles)){
      return false;
    }
  }
  return node_access('update', $node);
}