<?php
/**
 * @file
 * Code for the mt feature.
 */

include_once 'mt.features.inc';

function mt_preprocess($vars,$hook){
    if($hook == 'block'){
        $cblock = $vars['block'];
        if($cblock->module == 'ds' && $cblock->bid == 'ds-0b596e3199de270de74a2f6e8f0d1525'){
            $cblock->subject = t("Where it's at"); 
        }
        if($cblock->module == 'ds' && $cblock->bid == 'ds-5c755d31699c072160e29da9599e28f3'){
            $cblock->subject = t("Add to calendar");
        }
	if($cblock->module == 'views' && $cblock->delta == '-exp-latest_pages-page_7'){
            $cblock->subject = t("By group"); 
        }
    }
    
}

function mt_count_user_ct($type){
      global $user;
      return db_result(db_query("SELECT Count(node.nid) FROM node WHERE node.type = '%s'  AND node.uid = %d",$type,$user->uid));
}

function mt_init_(){
        global $user;

        if($user->uid > 1){
          $cgroups = mt_count_user_ct("group");
          $cevents = mt_count_user_ct("event");
          $glink = l("Add a Group","node/add/group");
          $elink = l("Add an Event","node/add/event");
          $icallink = l("Import an iCal Feed","node/add/event");
          $profilelink = l("Update your personal profile","user/$user->uid/edit/Personal%20information");
          $hasprofile = db_result(db_query("SELECT count(fid) FROM profile_values WHERE uid = %d AND fid = 1",$user->uid));

          if(!$hasprofile){
            $actions[]="<li><b>$profilelink</b></li>";
          }else{
            $actions[]="<li>$profilelink</li>";
          }

          if($cgroups > 0){
              $actions[]="<li>$glink</li>";
          }else{
              $actions[]="<li><b>$glink</b></li>";
          }

          if(!$cevents && $cgroups){
            $actions[]="<li><b>$elink OR $icallink</b></li>";
          }elseif($cevents){
            $actions[]="<li>$elink OR $icallink</li>";
          }

          drupal_set_message("<div class=\"wizard\"><p>Please do the following to complete your MiamiTech.org Experience</p>"."<ul>".implode($actions,"")."</ul></div>");
        }
}

function mt_ds_fields($type_name, $build_mode, $extra) {
  $fields = array(
    'mt_event_image' => array(
      'title' => t('Image'),
      'exclude' => array(
        'group' => 'group',
        'link' => 'link',
        'webform' => 'webform',
        'article' => 0,
        'audio' => 0,
        'event' => 0,
        'feeds' => 0,
        'file' => 0,
        'nnews' => 0,
        'npage' => 0,
        'place' => 0,
        'video' => 0,
        'gallery' => 0,
        'gallery_image' => 0,
        'forum' => 0,
        'taxonomy_feature' => 0,
      ),
      'type' => DS_FIELD_TYPE_CODE,
      'status' => DS_FIELD_STATUS_CUSTOM,
      'properties' => array(
        'css-class' => 'field-nodes-slideshow',
        'formatters' => array(
          'ds_eval_code' => 'Default',
        ),
        'code' => '<?php 
          print mt_event_image($object);
        ?>',
        'token' => 0,
      ),
    ),

    'mt_add_ical' => array(
      'title' => t('Add to Calendar'),
      'exclude' => array(
        'group' => 'group',
        'link' => 'link',
        'webform' => 'webform',
        'article' => 0,
        'audio' => 0,
        'event' => 0,
        'feeds' => 0,
        'file' => 0,
        'nnews' => 0,
        'npage' => 0,
        'place' => 0,
        'video' => 0,
        'gallery' => 0,
        'gallery_image' => 0,
        'forum' => 0,
        'taxonomy_feature' => 0,
      ),
      'type' => DS_FIELD_TYPE_CODE,
      'status' => DS_FIELD_STATUS_CUSTOM,
      'properties' => array(
        'css-class' => 'field-ical',
        'formatters' => array(
          'ds_eval_code' => 'Default',
        ),
        'code' => '<?php 
          print mt_add_ical($object);
        ?>',
        'token' => 0,
      ),
    ),

    'mt_add_group_ical' => array(
      'title' => t('Add Group to Calendar iCal'),
      'exclude' => array(
        'group' => 'group',
        'link' => 'link',
        'webform' => 'webform',
        'article' => 0,
        'audio' => 0,
        'event' => 0,
        'feeds' => 0,
        'file' => 0,
        'nnews' => 0,
        'npage' => 0,
        'place' => 0,
        'video' => 0,
        'gallery' => 0,
        'gallery_image' => 0,
        'forum' => 0,
        'taxonomy_feature' => 0,
      ),
      'type' => DS_FIELD_TYPE_CODE,
      'status' => DS_FIELD_STATUS_CUSTOM,
      'properties' => array(
        'css-class' => 'field-group-ical',
        'formatters' => array(
          'ds_eval_code' => 'Default',
        ),
        'code' => '<?php 
          print mt_add_group_ical($object);
        ?>',
        'token' => 0,
      ),
    ),


    'mt_add_group_rss' => array(
      'title' => t('Add Group to Calendar RSS'),
      'exclude' => array(
        'group' => 'group',
        'link' => 'link',
        'webform' => 'webform',
        'article' => 0,
        'audio' => 0,
        'event' => 0,
        'feeds' => 0,
        'file' => 0,
        'nnews' => 0,
        'npage' => 0,
        'place' => 0,
        'video' => 0,
        'gallery' => 0,
        'gallery_image' => 0,
        'forum' => 0,
        'taxonomy_feature' => 0,
      ),
      'type' => DS_FIELD_TYPE_CODE,
      'status' => DS_FIELD_STATUS_CUSTOM,
      'properties' => array(
        'css-class' => 'field-group-ical',
        'formatters' => array(
          'ds_eval_code' => 'Default',
        ),
        'code' => '<?php 
          print mt_add_group_rss($object);
        ?>',
        'token' => 0,
      ),
    ),
  );

  return array('nd' => $fields);
}

function mt_add_group_rss($node){
  $gid = current($node->og_groups);
  return '<span class="rss-group-ico"> </span><a class="ical-link" href="http://'. $_SERVER["SERVER_NAME"] .'/groups/' . $gid . '/rss">All events from this group (RSS)</a>';
}

function mt_add_group_ical($node){
  $gid = current($node->og_groups);
  return '<span class="ical-group-ico"> </span><a class="ical-link" href="webcal://'. $_SERVER["SERVER_NAME"] .'/group/' . $gid . '/ical">All events from this group (iCal)</a>';
}

function mt_add_ical($node){
  return '<span class="ical-ico">Image</span><a class="ical-link" href="webcal://'. $_SERVER["SERVER_NAME"] .'/node/' . $node->nid . '/ical">Just this event (iCal)</a>';
}

function mt_event_image($node){
  if(count($node->field_list_image)>0 && isset($node->field_list_image['0']['fid'])){
    return views_embed_view("node_details","block_2", $node->nid);
  }
  //else{
  //  $gid = array_pop($node->og_groups);
  //  return views_embed_view("node_details","block_2", $gid);
  //}
}

function mt_form_alter(&$form, &$form_state, $form_id){
  if($form_id=='user_profile_form'){
    $form['Personal information']['picture_delete'] = $form['picture']['picture_delete'];
    $form['Personal information']['picture_upload'] = $form['picture']['picture_upload'];
    $form['Personal information']['picture_upload']['#title'] = 'Picture';
    unset($form['picture']);
  }
  //remove the og_register from user registration form.
  if($form_id == "user_register"){
    if($form['og_register']){
      unset($form['og_register']);
    }
  }

  if ($form['#id'] == 'node-form') {
    if($form['og_nodeapi']['visible']['og_groups']['#options']['0']=='- None -'){
      unset($form['og_nodeapi']['visible']['og_groups']['#options']['0']);
    }
    if (isset($form['locations'][0]) && $form['locations'][0]['#default_value']['province']=='NY' && $form['locations'][0]['#default_value']['city']=='Harlem' ) {
      $form['locations'][0]['#default_value'] = array(
        'city' => '',
        'province' => 'FL',
        'country' => 'us'
      );
    }
    if(isset($form['field_related']['#access']) && $form['field_related']['#access']==TRUE){
      $form['field_related']['#access']=FALSE;
    }
    if(isset($form['field_list_image']['#access']) && $form['field_list_image']['#access']==TRUE){
      $form['field_list_image']['#access']=FALSE;
    }
  }
  if($form['#id']=='views-exposed-form-latest-pages-page-7'){
    $form['title']['#attributes']['placeholder']= "Start typing a group's name...";
  }
  if(is_array($form['#validate']) && in_array('feedapi_node_validate', $form['#validate'])){
    $index = array_search('feedapi_node_validate', $form['#validate']);
    $form['#validate'][$index] = 'mt_node_validate';
    $form['#validate'][] = 'feedapi_node_validate';
  }
}

function mt_preprocess_page(&$vars){
  if(arg(0)=='latest' && isset($_GET['title'])){
    $vars['head_title'] = str_replace('Events', 'Events from ' . $_GET['title'], $vars['head_title']);
  }
}


function mt_ds_fields_alter(&$fields) {
  $fields['nd_location_name'] = $fields['name'];
  $fields['nd_location_name']['properties']['formatters']['mt_location_textfield'] = t('MT Textfield');
  unset($fields['name']); 
}

function theme_mt_location_textfield($field) {
  if($field['key']=='nd_location_name'){
    $field['key']='name';
  }
  if (!empty($field['object']->location[$field['key']])) {
    $value = $field['object']->location[$field['key']];
    if ($field['key'] == 'country') {
      $value = $field['object']->location['country_name'];
    }
    if ($field['key'] == 'province') {
      $value = $field['object']->location['province_name'];
    }
    if ($field['key'] == 'locpick') {
      // Latitude.
      $value  = '';
      list($degrees, $minutes, $seconds, $negative) = location_dd_to_dms($field['object']->location['latitude']);
      $value .= "${degrees}° ${minutes}' ${seconds}\" ";
      if (!$negative) {
        $value .= 'N';
      }
      else {
        $value .= 'S';
      }
      // Longitude
      list($degrees, $minutes, $seconds, $negative) = location_dd_to_dms($field['object']->location['longitude']);
      $value .= ", ${degrees}° ${minutes}' ${seconds}\" ";
      if (!$negative) {
        $value .= 'E';
      }
      else {
        $value .= 'W';
      }
    }
    return check_plain($value);
  }
}

function mt_theme() {
  $theme_functions = array(
  'mt_location_textfield' => array(
      'arguments' => array('field' => NULL),
    ),
  );
  return $theme_functions;
}

function mt_init(){
  if(arg(0)=='node' && is_numeric(arg(1))){
    $node = node_load(arg(1));
    if($node->type=='event'){
      drupal_add_js((drupal_get_path('module', 'mt') .'/js/mt.js'));
    }
  }
}

function mt_node_validate($form, &$form_state) {
  if(preg_match('/^webcal:\/\//i',$form_state['values']['feedapi']['feedapi_url']) ){
    $form_state['values']['feedapi']['feedapi_url'] = str_replace('webcal://', 'http://', $form_state['values']['feedapi']['feedapi_url']);
  }
  if (empty($form_state['values']['title'])) {
    $new_title = 'Feed from ' . str_replace('http://', '', $form_state['values']['feedapi']['feedapi_url']);
    form_set_value($form['title'], $new_title, $form_state);
  }
}

function mt_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL){
  if(($op=='insert' || $op=='update') && $node->type=='event_feed'){
    foreach ($node->og_groups as $key => $value) {
      $gid = $key;
      break;
    }
    feedapi_refresh($node, 'node/' . $gid );
  }
}


function mt_menu_alter(&$items) {
  unset($items['node/%views_arg/by_subject']['access arguments']);
  $items['node/%views_arg/by_subject']['access arguments']['0']['0']='views_check_roles';
  $items['node/%views_arg/by_subject']['access arguments']['0']['1']['0']['4']='4';
}

function mt_mail_alter(&$message){
  $site_name = variable_get('site_name', '');
  $message['from'] = '"' . $site_name . '" <' .  $message['from'] . '>';
  $message['headers']['From'] = $message['from'];
  $message['headers']['Sender'] = $message['from'];
}